Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> phrase
Rule 2     query -> query AND query
Rule 3     query -> query OR query
Rule 4     query -> NOT query
Rule 5     phrase -> TERM
Rule 6     phrase -> TERM phrase

Terminals, with rules where they appear

AND                  : 2
NOT                  : 4
OR                   : 3
TERM                 : 5 6
error                : 

Nonterminals, with rules where they appear

phrase               : 1 6
query                : 2 2 3 3 4 0

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . phrase
    (2) query -> . query AND query
    (3) query -> . query OR query
    (4) query -> . NOT query
    (5) phrase -> . TERM
    (6) phrase -> . TERM phrase

    NOT             shift and go to state 3
    TERM            shift and go to state 4

    query                          shift and go to state 1
    phrase                         shift and go to state 2

state 1

    (0) S' -> query .
    (2) query -> query . AND query
    (3) query -> query . OR query

    AND             shift and go to state 5
    OR              shift and go to state 6


state 2

    (1) query -> phrase .

    AND             reduce using rule 1 (query -> phrase .)
    OR              reduce using rule 1 (query -> phrase .)
    $end            reduce using rule 1 (query -> phrase .)


state 3

    (4) query -> NOT . query
    (1) query -> . phrase
    (2) query -> . query AND query
    (3) query -> . query OR query
    (4) query -> . NOT query
    (5) phrase -> . TERM
    (6) phrase -> . TERM phrase

    NOT             shift and go to state 3
    TERM            shift and go to state 4

    query                          shift and go to state 7
    phrase                         shift and go to state 2

state 4

    (5) phrase -> TERM .
    (6) phrase -> TERM . phrase
    (5) phrase -> . TERM
    (6) phrase -> . TERM phrase

    AND             reduce using rule 5 (phrase -> TERM .)
    OR              reduce using rule 5 (phrase -> TERM .)
    $end            reduce using rule 5 (phrase -> TERM .)
    TERM            shift and go to state 4

    phrase                         shift and go to state 8

state 5

    (2) query -> query AND . query
    (1) query -> . phrase
    (2) query -> . query AND query
    (3) query -> . query OR query
    (4) query -> . NOT query
    (5) phrase -> . TERM
    (6) phrase -> . TERM phrase

    NOT             shift and go to state 3
    TERM            shift and go to state 4

    query                          shift and go to state 9
    phrase                         shift and go to state 2

state 6

    (3) query -> query OR . query
    (1) query -> . phrase
    (2) query -> . query AND query
    (3) query -> . query OR query
    (4) query -> . NOT query
    (5) phrase -> . TERM
    (6) phrase -> . TERM phrase

    NOT             shift and go to state 3
    TERM            shift and go to state 4

    query                          shift and go to state 10
    phrase                         shift and go to state 2

state 7

    (4) query -> NOT query .
    (2) query -> query . AND query
    (3) query -> query . OR query

    AND             reduce using rule 4 (query -> NOT query .)
    OR              reduce using rule 4 (query -> NOT query .)
    $end            reduce using rule 4 (query -> NOT query .)

  ! AND             [ shift and go to state 5 ]
  ! OR              [ shift and go to state 6 ]


state 8

    (6) phrase -> TERM phrase .

    AND             reduce using rule 6 (phrase -> TERM phrase .)
    OR              reduce using rule 6 (phrase -> TERM phrase .)
    $end            reduce using rule 6 (phrase -> TERM phrase .)


state 9

    (2) query -> query AND query .
    (2) query -> query . AND query
    (3) query -> query . OR query

    AND             reduce using rule 2 (query -> query AND query .)
    OR              reduce using rule 2 (query -> query AND query .)
    $end            reduce using rule 2 (query -> query AND query .)

  ! AND             [ shift and go to state 5 ]
  ! OR              [ shift and go to state 6 ]


state 10

    (3) query -> query OR query .
    (2) query -> query . AND query
    (3) query -> query . OR query

    AND             reduce using rule 3 (query -> query OR query .)
    OR              reduce using rule 3 (query -> query OR query .)
    $end            reduce using rule 3 (query -> query OR query .)

  ! AND             [ shift and go to state 5 ]
  ! OR              [ shift and go to state 6 ]

